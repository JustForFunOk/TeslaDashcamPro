name: Build and Release by Platform

on:
  push:
    tags:
      - 'v*' # 当推送标签（如 v1.0.0）时触发
  workflow_dispatch: # 手动触发

jobs:
  build_unix:
    name: Build and Package for Unix Platforms
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          cache: npm

      - name: Install Dependencies
        run: npm install

      - name: Build Package
        run: npm run make

      - name: Debug Output Directory
        run: ls -R out/make

      - name: Find Build Artifacts
        id: find_packages
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            ARTIFACT=$(find out/make -type f \( -name "*.deb" -o -name "*.rpm" -o -name "*.zip" \) | head -n 1)
          elif [[ "${{ matrix.os }}" == macos* ]]; then
            ARTIFACT=$(find out/make -type f -name "*.zip" | head -n 1)
          fi
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        if: ${{ env.ARTIFACT }}
        with:
          name: ${{ matrix.os }}-artifact
          path: ${{ env.ARTIFACT }}

  build_windows:
    name: Build and Package for Windows
    runs-on: windows-2019
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          cache: npm

      - name: Install Dependencies
        run: npm install

      - name: Build Package
        run: npm run make

      - name: Debug Output Directory
        run: dir out\make /s

      - name: Find Build Artifacts
        id: find_packages
        run: |
          pwsh -Command "
          if (Test-Path 'out/make') {
              \$artifact = Get-ChildItem -Path 'out/make' -Recurse -Filter '*.exe' | Select-Object -First 1
              if (\$artifact) {
                  Write-Output \"ARTIFACT=\$($artifact.FullName)\" | Out-File -FilePath $env:GITHUB_ENV -Append
              }
          }"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        if: ${{ env.ARTIFACT }}
        with:
          name: windows-artifact
          path: ${{ env.ARTIFACT }}

  release:
    name: Create GitHub Release
    needs: [build_unix, build_windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist
          asset_name: $(basename dist/*)
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
